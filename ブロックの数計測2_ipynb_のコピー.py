# -*- coding: utf-8 -*-
"""ブロックの数計測2.ipynb のコピー

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JUk8qgHj8v7qDNu6_Cx8geeu79EzPUFx
"""

pip install opencv-python numpy

import cv2
import numpy as np
import pandas as pd

def count_color_markers(image_path, color_ranges, window_size=(176, 128)):
    image = cv2.imread(image_path)
    if image is None:
        return None

    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
    height, width, _ = image.shape
    results = []

    for y in range(0, height, window_size[1]):
        for x in range(0, width, window_size[0]):
            window = hsv[y:y + window_size[1], x:x + window_size[0]]
            color_counts = {}

            for color, (lower, upper) in color_ranges.items():
                mask = cv2.inRange(window, lower, upper)
                contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
                color_counts[color] = len(contours)

            results.append(((x, y), color_counts))

    return results

def save_to_csv(results, output_file):
    # 結果をデータフレームに変換
    data = []
    for position, color_counts in results:
        entry = {'X': position[0], 'Y': position[1]}
        entry.update(color_counts)
        data.append(entry)

    df = pd.DataFrame(data)
    df.to_csv(output_file, index=False)
    print(f"Data saved to {output_file}")

# 色の範囲をHSVで定義
COLOR_RANGES = {
    'red': ((0, 120, 70), (10, 255, 255)),
    'blue': ((100, 150, 50), (140, 255, 255)),
    'light_gray': ((0, 0, 200), (180, 30, 255))
}

# 画像パスを指定
image_path = '/content/textage.cc_score_31_amethyst.html_1H900R.png'

# ブロックを検出
results = count_color_markers(image_path, COLOR_RANGES)

# CSVに保存
if results:
    save_to_csv(results, '/content/sample_data/output_markers1.csv')
else:
    print("Error: Image could not be loaded.")